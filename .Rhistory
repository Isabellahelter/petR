ipca = BETSget(433)
plot(ipca)
plot(ipca, main = "Variação Mensal do IPCA")
plot(ipca, main = "Variação Mensal do IPCA", ylab = "%")
plot(ipca,
main = "Variação Mensal do IPCA",
ylab = "%",
xlab = "Ano")
plot(ipca,
main = "Variação Mensal do IPCA, 1980-2019",
ylab = "%",
xlab = "Ano")
install.packages("electionsBR")
library(electionsBR)
presidente = president_mun_vote(year = 2010)
head(presidente)
library(BETS)
BETSget(2053)
divida = BETSget(2053)
plot(divida)
divida = BETSget(2053, from = "2012-01-01")
plot(divida)
pib = BETSget(4380, from = "2012-01-01")
razaodivida = divida/pib
plot(razaodivida)
pib
divida
pib = pib*1000
razaodivida = divida/pib
plot(razaodivida)
pib = BETSget(4380, from = "2012-01-01")
pib = pib*100
razaodivida = divida/pib
plot(razaodivida)
divida_liquida = BETSget(2054, from = "2012-01-01")
divida_liquida = BETSget(2054, from = "2012-01-01")
pib = BETSget(4390, from = "2012-01-01")
divida_pib = divida_liquida / pib
plot(divida_pib)
plot(ipca,
main = "Variação Mensal do IPCA, 1980-2019",
sub = "O fim da hiperinflação",
ylab = "%",
xlab = "Ano")
ipca = BETSget(433)
ipca = BETSget(433)
plot(ipca,
main = "Variação Mensal do IPCA, 1980-2019",
sub = "O fim da hiperinflação",
ylab = "%",
xlab = "Ano")
plot(ipca,
main = "Variação Mensal do IPCA, 1980-2019",
ylab = "%",
xlab = "Ano",
sub = "Dados do Banco Central do Brasil")
set.seed(as.numeric(Sys.time()))
Sys.time()
as.numeric(Sys.time())
set.seed(as.numeric(Sys.time()))
print(semente)
semente = as.numeric(Sys.time())
print(semente)
Sys.time()
semente = as.numeric(Sys.time())
print(semente)
dpois(10,lambda = 8)
punif(min = -1, max = 1)
punif(0, min = -1, max = 1)
dpois(10, lambda = 8)
dt(2, df = 10)
X = rnorm(n = 2000,
mean = 2,
sd = sqrt(8))
X = rnorm(n = 2000,
mean = 2,
sd = sqrt(8))
sd(X) # desvio-padrão dos dados
var(X) # variância dos dados
mean(X) # média dos dados
sample(X, size = 8) # 8 elementos aleatoriamente escolhidos de X
shapiro.test(X) # teste de Shapiro-Wilk de normalidade de dados
ks.test(X,
"pnorm",
mean = 2,
sd = sqrt(8))
setwd("C:/Users/Pichau/Desktop/petR/Aula 2 - Importando Dados e Gerando Gráficos")
exercicio1 = rt(5000, df = 15)
saveRDS(exercicio1, "exercicio1.Rds")
exercicio2 = rf(5000, df1 = 2, df2 = 8)
saveRDS(exercicio2, "exercicio2.Rds")
library(readr)
exercicio3 = rexp(500, rate = 3)
write_csv2(exercicio3, "exercicio3.csv")
write_dta(exercicio3, "exercicio3.dta")
library(haven)
write_dta(exercicio3, "exercicio3.dta")
exercicio3 = data.frame(variavel = exercicio3)
write_dta(exercicio3, "exercicio3.dta")
citation(BETS)
citation("BETS")
citation("electionsBR")
install.packages("mongolite")
setwd("C:/Users/Pichau/Desktop/petR/Aula 3 - Gerando Gráficos e Manipulando Dados")
library(dplyr)
Sys.time() %>%
as.numeric() %>%
set.seed()
X = rnorm(n = 2000,
mean = 2,
sd = sqrt(8))
X %>% shapiro.test()
X %>% sd() %>% var()
X %>% sd()
X %>% sample(7)
X %>% shapiro.test()
library(have)
library(have)
library(haven)
dados_setoriais = read_dta("10SD_jan15.dta")
setwd("C:/Users/Pichau/Desktop/petR/Aula 3 - Gerando Gráficos e Manipulando Dados")
dados_setoriais = read_dta("10SD_jan15.dta")
saveRDS(dados_setoriais, "setores.Rds")
setores = readRDS("setores.Rds")
library(tibble)
dados_setoriais = as.tibble(read_dta("10SD_jan15.dta"))
saveRDS(dados_setoriais, "setores.Rds")
dados_setoriais = as_tibble(read_dta("10SD_jan15.dta"))
saveRDS(dados_setoriais, "setores.Rds")
setores = readRDS("setores.Rds")
head(setores)
head(dados_setoriais)
library(tidyr)
spread(dados_setoriais,
Variable)
spread(dados_setoriais,
Variable, Year)
spread(dados_setoriais,
Variable, Country)
head(dados_setoriais)
dados_setoriais$Variable = factor(dados_setoriais$Variable)
dados_setoriais$Region = factor(dados_setoriais$Region)
head(dados_setoriais)
saveRDS(dados_setoriais, "setores.Rds")
dados_setoriais$Variable
setoresVAQ = dados_setoriais[dados_setoriais$Variable == VA_Q10,]
setoresVAQ = dados_setoriais[dados_setoriais$Variable == "VA_Q10",]
setoresVAQ
setoresVAQ = dados_setoriais[dados_setoriais$Variable == "VA_Q5",]
setoresVAQ
setoresVAQ = dados_setoriais[dados_setoriais$Variable == "VA_Q05",]
setoresVAQ
setoresVAQ$Variable = NULL
saveRDS(setoresVAQ, "VA_setorial.Rds")
install.packages(c("caTools", "ellipsis", "gganimate", "gmp", "haven", "modelr", "openssl", "purrr", "RcppArmadillo", "RCurl", "RMySQL", "servr", "sf", "sys", "tidyr", "xfun"))
install.packages(c("caTools", "ellipsis", "gganimate", "gmp", "haven", "modelr", "openssl", "purrr", "RcppArmadillo", "RCurl", "RMySQL", "servr", "sf", "sys", "tidyr", "xfun"))
install.packages("pwt9")
library(pwt9)
data("pwt9.0")
pwt = data("pwt9.0")
head(pwt)
data("pwt9.0")
head(pwt9.0)
str(pwt9.0)
pwt9.0 %>%
group_by(year) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
library(dplyr)
pwt9.0 %>%
group_by(year) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
pwt9.0 %>%
group_by(year) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
install.packages("purr", dependencies = TRUE)
install.packages("purrr", dependencies = TRUE)
install.packages("purrr", dependencies = TRUE)
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "00", "10"))))))
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
library(dplyr)
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
print(expor_governo)
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "100", "110"))))))
print(expor_governo)
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "100", "110"))))))
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
print(expor_governo)
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "00", "10"))))))
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
print(expor_governo)
# primeiro criaremos uma variável com a década da observação
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "00", "10")))))) %>% factor()
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
print(expor_governo)
# primeiro criaremos uma variável com a década da observação
pwt9.0$decada = ifelse(pwt9.0$year - 1900 < 60, "50",
ifelse(pwt9.0$year - 1900 < 70, "60",
ifelse(pwt9.0$year - 1900 < 80, "70",
ifelse(pwt9.0$year - 1900 < 90, "80",
ifelse(pwt9.0$year - 1900 < 100, "90",
ifelse(pwt9.0$year - 1900 < 110, "00", "10")))))) %>% factor()
expor_governo = pwt9.0 %>%
group_by(decada) %>%
summarise(Governo = mean(csh_g, na.rm = TRUE),
Exportacoes = mean(csh_x, na.rm = TRUE))
print(expor_governo)
data(iris)
head(iris)
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width))
library(ggplot2)
library(ggplot2)
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width))
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width)) +
geom_point()
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width)) +
geom_point(color = "blue")
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width)) +
geom_point(color = Species)
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width)) +
geom_point(color = iris$Species)
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width), color = Species) +
geom_point(Species)
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width), color = Species) +
geom_point()
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width, color = Species)) +
geom_point()
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width, shape = Species)) +
geom_point()
iris %>%
ggplot(aes(x = Petal.Length, y = Petal.Width, alpha = Species)) +
geom_point()
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length))
iris %>%
ggplot(aes(x = Species, y = Petal.Length)) +
geom_boxplot()
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length))
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length)) +
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length)) +
geom_boxplot(aes(y = Petal.Width))
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length)) +
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length)) +
geom_boxplot(aes(y = Petal.Width))
iris %>%
ggplot(aes(x = Species)) +
geom_boxplot(aes(y = Petal.Length)) +
geom_boxplot(aes(y = Petal.Width))
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram() +
stat_density()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(aes(y = ..density..)) +
stat_density()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram()
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(bins = 15)
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(bins = 45)
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(bins = 30)
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(bins = 15)
iris %>%
ggplot(aes(x = Petal.Length)) +
geom_histogram(bins = 45)
prouni = readRDS("prouni.Rds")
prouni %>%
ggplot(aes(x = mensalidade, y = nota,
color = medicina, show.legend = FALSE)) +
geom_point()+
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
prouni
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
prouni$Medicina = factor(prouni$Medicina)
saveRDS(prouni, "prouni.Rds")
prouni = readRDS("prouni.Rds")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
prouni$Medicina = ifelse(prouni$Medicina == 1, "Sim", "Não")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
saveRDS(prouni, "prouni.Rds")
prouni = readRDS("prouni.Rds")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni")+
ylab("Nota de Corte do curso no ProUni")+
labs(col="Medicina")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
ggtitle("Relação entre nota de corte e mensalidade no ProUni")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_point() +
xlab("Mensalidade do curso no ProUni") +
ylab("Nota de Corte do curso no ProUni") +
labs(title = "Relação entre nota de corte e mensalidade no ProUni",
col = "Medicina",
caption = "Fonte: Inep/MEC")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_smooth() +
xlab("Mensalidade do curso no ProUni") +
ylab("Nota de Corte do curso no ProUni") +
labs(title = "Relação entre nota de corte e mensalidade no ProUni",
col = "Medicina",
caption = "Fonte: Inep/MEC")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla)) +
geom_smooth() +
xlab("Mensalidade do curso no ProUni") +
ylab("Nota de Corte do curso no ProUni") +
labs(title = "Relação entre nota de corte e mensalidade no ProUni",
caption = "Fonte: Inep/MEC")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla)) +
geom_smooth() +
xlab("Mensalidade do curso no ProUni") +
ylab("Nota de Corte do curso no ProUni") +
labs(title = "Relação entre nota de corte e mensalidade no ProUni",
caption = "Fonte: Inep/MEC")
prouni %>%
ggplot(aes(x = mensalidade, y = nota_integral_ampla,
color = Medicina, show.legend = FALSE)) +
geom_smooth() +
xlab("Mensalidade do curso no ProUni") +
ylab("Nota de Corte do curso no ProUni") +
labs(title = "Relação entre nota de corte e mensalidade no ProUni",
col = "Medicina",
caption = "Fonte: Inep/MEC")
Y = rnorm(1000)
set.seed(1234)
Y = rnorm(1000)
dados = data.frame(Y = rnorm(1000))
dados %>%
ggplot(aes(x = X)) +
geom_histogram()
dados
head(dados)
dados = data.frame(X = rnorm(1000))
dados %>%
ggplot(aes(x = X)) +
geom_histogram()
dados = data.frame(X = rnorm(3000))
dados %>%
ggplot(aes(x = X)) +
geom_histogram()
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..))
dados %>%
ggplot(aes(x = X)) +
geom_histogram() +
stat_function(fun = dnorm)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, size = 2)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2) +
stat_function(fun = dnorm, size = 2)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..), binwidth = 0.1) +
stat_function(fun = dnorm, size = 2)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2) +
stat_function(fun = dnorm, size = 2)
dados %>%
ggplot(aes(x = X)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, size = 2)
head(prouni)
prouni$uf_busca
mtcars
dados2 = data.frame(x = rt(3000, df = 5))
dados2 = data.frame(x = rexp(3000, rate = 5))
dados2 %>%
ggplot(aes(x = x)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dexp, args = list(rate = 1))
dados2 %>%
ggplot(aes(x = x)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dexp,
args = list(rate = 1),
size = 2)
dados2 %>%
ggplot(aes(x = x)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dexp,
args = list(rate = 5),
size = 2)
